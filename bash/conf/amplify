# vim: ft=sh
export WORKDIR=/Users/fesperan/amplify

export M2_HOME=/usr/share/maven
#export MAVEN_OPTS="-Dandroid.lint.skip=true"
export ANDROID_HOME=$ANDROID_SDK_ROOT
export PATH=$ANDROID_HOME/tools:$PATH
export PLAY_HOME=/usr/local/opt/play
export PATH=$PLAY_HOME:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$JAVA_HOME/bin:$HOME/amplify/amptools/bin:$PATH
export JAVA_OPTS="-Xmx1024m -Djruby.compile.mode=OFF -Djava.awt.headless=true"
export JRUBY_OPTS="-Xcext.enabled=true"

export SCMP_SERVICES_USER=root
export SCMP_SERVICES_PASS=
export PASS=root
export MYSQL_PASSWORD=
export RUN_JOBS=false

export MYSQL_PASSWORD=


export CB_STORE_LOCATION=/Users/Thoughtworker/amplify/notebook-client/amplify-developer.keystore
export CB_KEY_ALIAS=amplify
export CB_STORE_PASS=amplifydev
export CB_KEY_PASS=amplifydev
alias unset_keys='unset CB_STORE_LOCATION; unset CB_KEY_ALIAS; unset CB_STORE_PASS; unset CB_KEY_PASS'


alias amplify_openfire='cd /usr/local/openfire/bin && ./openfire start > /dev/null; cd -'
alias amplify_mysql_start='cd /usr/local/opt/mysql ; /usr/local/opt/mysql/bin/mysqld_safe & > /dev/null; cd -'

alias aa="cd ~/amplify"
alias lc="logcat-color *:S"
alias boot_broadscast='adb shell am broadcast -a android.intent.action.BOOT_COMPLETED '

ci() {
  RETURN_CODE=0
  ci_recursion $@
}
ci_recursion() {
  __GREEN__="\033[32m" 
  __RED__="\033[31m" 
  __WHITE__="\033[37m" 
  __YELLOW__="\033[33m" 
  COLOR=$__WHITE__

  USER=fesperandio
  API_TOKEN='65f8255daefebd57e433ee147ee7d68c'

  ACCESS_KEY="${USER}%40amplify.com:${API_TOKEN}"

  JENKINS="https://${ACCESS_KEY}@jenkins.ampaxs.com:8443"

  JOB=${1}
  DOWN_STREAM="${JENKINS}/job/${JOB}/api/json?tree=downstreamProjects[name]"
  DOWN_STREAM_NAMES=$(curl -g -s -m 3 $DOWN_STREAM | perl -pe 's/.*?{"name":"(.*?)"},?(?:\]\})?/\1 /g' | grep -v '{"downstreamProjects":\[\]}' )
  #if [[ "$DOWN_STREAM_NAMES" != "" ]]; then
  #  echo -e "${__WHITE__}Downstream projects for ${JOB}: ${DOWN_STREAM_NAMES}" 
  #fi

  for downStreamProject in ${DOWN_STREAM_NAMES}
  do
    ci_recursion $downStreamProject 
  done

  JOB=${1}
  JOB_URL="${JENKINS}/job/${JOB}/lastCompletedBuild/api/json?tree=result"
  RESULT=$(curl -s -m 3 $JOB_URL | sed -n 's/.*"result":"\([A-Z]*\).*/\1/p')
  
  case "$RESULT" in
    SUCCESS ) COLOR=$__GREEN__ ;;
    UNSTABLE ) COLOR=$__YELLOW__ ;;
    * ) COLOR=$__RED__ ;;
  esac

  echo -e "${COLOR}${JOB} : ${RESULT} ${__WHITE__}"
  echo $RESULT | grep SUCCESS > /dev/null
  RETURN_CODE=$(($RETURN_CODE + $?))

  if [[ "$FORCE" == "true" ]]; then
    RETURN_CODE=0
  fi

  return $RETURN_CODE

}

amplify_download_apks() {
  CONFIGURATION="${HOME}/.amp_resign_apk.conf" 
  . ${CONFIGURATION}

  ACCESS_KEY="${USER}%40amplify.com:${API_TOKEN}"

  JENKINS="https://${ACCESS_KEY}@jenkins.ampaxs.com:8443"
  cd /tmp

  rm -rf apks

  curl ${JENKINS}/job/notebook-client/lastSuccessfulBuild/artifact/target/*zip*/target.zip > target.zip
  unzip target.zip
  tar -xf ./target/*.tgz
  rm target.zip && rm -rf target

  curl ${JENKINS}/job/amp-client/lastSuccessfulBuild/artifact/target/*zip*/target.zip > target.zip
  unzip target.zip
  rm target.zip

  curl ${JENKINS}/job/Registration/lastSuccessfulBuild/artifact/target/*zip*/target.zip > target.zip
  unzip target.zip
  rm target.zip

  mv ./target/*.apk apks

  rm -rf target

  rm apks/*debug.apk
}

resign() {
  rm -rf unpacked
  rm app-debug.apk
  mkdir unpacked
  unzip $1 -d unpacked/
  cd unpacked
  rm -rf META-INF/
  zip -r ../app-debug.apk *
  jarsigner -verbose -keystore $CB_STORE_LOCATION -sigalg SHA1withRSA -digestalg SHA1 -storepass $CB_STORE_PASS -keypass $CB_KEY_PASS app-debug.apk $CB_KEY_ALIAS
  cd ..
}

portal_login() {
  CREDNTAILS=$(cat /Users/fesperan/amplify/admin-portal/features/support/users_credentials.rb | grep "email\|password" | head -n2 | awk -F'email\|password' '{print $2}' | cut -d'"' -f2 |xargs)
  case "$1" in
    user)
      user=$(echo $CREDNTAILS | awk '{print $1}')
      echo $user 
      echo $user | pbcopy
      ;;
    pass|password)
      pass=$(echo $CREDNTAILS | awk '{print $2}')
      echo $pass
      echo $pass | pbcopy
      ;;
  esac
  
}

amp_client_build() {
  mvn clean install -Dmaven.test.skip=true -Dandroid.lint.skip=true -Dpmd.skip=true -Dversion.code=500000 -Psign -Dservices.url=`whatsmyip en0`
}

fix_repo() {
  repo=${1:-"bitbucket_tw"}
  new_repo_line=$(git remote -v | grep origin | head -n1 | sed "s/bitbucket.org/${repo}/" | cut -d" " -f1)
  git remote rm origin
  git remote add $new_repo_line
  git fetch origin 
  git branch --set-upstream-to=origin/master master
  git remote -v
}

all_apks() {
  aa;
  mkdir apks;
  find . -name "*.apk" | xargs -J % cp % apks
}

clear_all() {
  adb shell pm clear com.amplify.amp
  adb shell pm clear com.amplify.registration
  adb reboot
}
